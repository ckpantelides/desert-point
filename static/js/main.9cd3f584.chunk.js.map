{"version":3,"sources":["components/NavBackground.js","components/Header.js","components/About.js","components/Packages.js","components/CustomHooks.js","components/Booking.js","components/Admin.js","App.js","serviceWorker.js","index.js"],"names":["NavBackground","useState","change","setChange","position","useWindowScrollPosition","y","style","backgroundColor","transition","height","right","left","top","Header","id","className","activeClass","to","spy","smooth","duration","About","src","alt","Packages","href","useBookingForm","initialValues","callback","inputs","setInputs","handleSubmit","event","preventDefault","handleInputChange","persist","target","name","value","Booking","email","telephone","dates","package","message","alert","axios","post","then","res","onSubmit","type","onChange","required","htmlFor","Admin","data","setData","isLoading","setIsLoading","readEnquiry","rowid","updatedData","map","read","useEffect","get","json","SortableEnquiry","SortableElement","deleteEnquiry","onClick","enquirydate","SortableEnquiryContainer","SortableContainer","items","index","key","filteredData","filter","axis","onSortEnd","oldIndex","newIndex","arrayMove","onSortStart","_","pressDelay","App","basename","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9cd3f584.chunk.js","sourcesContent":["//import React from \"react\";\r\nimport React, { useState } from \"react\";\r\n\r\n// Used for changing navbar background based on window position\r\nimport useWindowScrollPosition from \"@rehooks/window-scroll-position\";\r\n\r\n// NavBackground used to change navbar background from transparent on scroll\r\nfunction NavBackground() {\r\n  const [change, setChange] = useState(false);\r\n  const changePosition = 300;\r\n\r\n  let position = useWindowScrollPosition();\r\n\r\n  if (position.y > changePosition && !change) {\r\n    setChange(true);\r\n  }\r\n\r\n  if (position.y <= changePosition && change) {\r\n    setChange(false);\r\n  }\r\n\r\n  let style = {\r\n    backgroundColor: change ? \"#333\" : \"transparent\",\r\n    transition: \"400ms ease\",\r\n    height: \"48px\",\r\n    position: \"fixed\",\r\n    right: 0,\r\n    left: 0,\r\n    top: 0\r\n  };\r\n\r\n  return <div style={style}></div>;\r\n}\r\n\r\nexport default NavBackground;\r\n","import React from 'react';\r\n// react-scroll is used for smooth scrolling\r\nimport { Link } from 'react-scroll';\r\n\r\nconst Header = () => (\r\n  <header id='home'>\r\n    <nav id='nav-wrap'>\r\n      <ul id='nav' className='nav'>\r\n        <li>\r\n          <Link\r\n            activeClass='active'\r\n            to='home'\r\n            spy={true}\r\n            smooth={true}\r\n            duration={500}\r\n          >\r\n            HOME\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            activeClass='active'\r\n            to='about'\r\n            spy={true}\r\n            smooth={true}\r\n            duration={500}\r\n          >\r\n            ABOUT\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            activeClass='active'\r\n            to='packages'\r\n            spy={true}\r\n            smooth={true}\r\n            duration={500}\r\n          >\r\n            PACKAGES\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            activeClass='active'\r\n            to='booking'\r\n            spy={true}\r\n            smooth={true}\r\n            duration={500}\r\n          >\r\n            CONTACT\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n    <div className='row banner'>\r\n      <div className='banner-text'>\r\n        <h1>SURF CAMP</h1>\r\n        <h1>MOKNARI</h1>\r\n        <h1>MOROCCO</h1>\r\n      </div>\r\n    </div>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst About = () => (\r\n  <section id='about'>\r\n    <div className='row'>\r\n      <div className='main column'>\r\n        <h2>About</h2>\r\n        <p>\r\n          Want to experience a real Moroccan adventure and learn how to surf?\r\n          Come to Moknari, our small family village. We're on a desert\r\n          surrounded by mountains with a private beach spot! We'll teach you how\r\n          to surf, take you hiking, camel riding and fishing, teach you to make\r\n          argon oilâ€¦\r\n        </p>\r\n        <p>\r\n          Our surf course is suitable for beginners and intermediate level\r\n          surfers, from age 8 to 50. We also offer surf guiding for experienced\r\n          surfers, taking you to the best spots around\r\n        </p>\r\n        <p>Surf camp Moknari, not only a surf school - a life experience!</p>\r\n        <h2>Contact Details</h2>\r\n        <p className='address'>\r\n          <span>Desert Point Surf House</span>\r\n          <br />\r\n          <span> Moknari village</span>\r\n          <br />\r\n          <span>Tamri, Agadir 80502</span>\r\n          <br />\r\n          <span>Morocco</span>\r\n          <br />\r\n          <span>+212 611-833291</span>\r\n        </p>\r\n      </div>\r\n      <div className='side column'>\r\n        <h2>Our team</h2>\r\n        <p>Hicham</p>\r\n        <img src='images/hicham.jpg' className='profile-pic' alt='Hicham' />\r\n        <p>Faical</p>\r\n        <img src='images/faical.jpg' className='profile-pic' alt='Faical' />\r\n      </div>\r\n    </div>\r\n  </section>\r\n);\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nconst Packages = () => (\r\n  <section id=\"packages\">\r\n    <h2>Packages</h2>\r\n    <p>\r\n      We offer surf lessons and surf guiding with meals and accomodation. We\r\n      also offer camel riding, mountain biking and fishing.\r\n    </p>\r\n    <p>\r\n      If you are looking for bed and breakfast without surfing or any other\r\n      activities this is also available.\r\n    </p>\r\n    <p>\r\n      Send us a message with what it is you're interested in and we'll get back\r\n      to you with the best option to suit you.\r\n    </p>\r\n    <div className=\"package-container\">\r\n      <div className=\"package-item\">\r\n        <h2>SURF LESSONS</h2>\r\n        <h3>â‚¬360</h3>\r\n        <h4>for beginner and intermediate surfers</h4>\r\n        <ul>\r\n          <li>Transfer to & from Agadir airport/bus station</li>\r\n          <li>Surfboard and wetsuit</li>\r\n          <li>6 days of surf lessons</li>\r\n          <li>6 nights accommodation</li>\r\n          <li>All meals (breakfast, lunch and dinner)</li>\r\n          <li>Transfer to the best surf spots</li>\r\n          <li>Visit to Agadir souk with other excursions</li>\r\n        </ul>\r\n        <button>\r\n          <a href=\"#booking\">Book now</a>\r\n        </button>\r\n      </div>\r\n      <div className=\"package-item\">\r\n        <h2>SURF GUIDING</h2>\r\n        <h3>â‚¬320</h3>\r\n        <h4>for experienced surfers</h4>\r\n        <ul>\r\n          <li>Transfer to & from Agadir airport/bus station</li>\r\n          <li>Surfboard/wetsuit - if needed</li>\r\n          <li>6 days of surf guiding</li>\r\n          <li>7 nights accommodation</li>\r\n          <li>All meals (breakfast, lunch and dinner)</li>\r\n          <li>Transfer to the best surf spots</li>\r\n          <li>Visit to Agadir souk with other excursions</li>\r\n        </ul>\r\n        <button>\r\n          <a href=\"#booking\">Book now</a>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </section>\r\n);\r\n\r\nexport default Packages;\r\n","import { useState } from \"react\";\r\n\r\nconst useBookingForm = (initialValues, callback) => {\r\n  const [inputs, setInputs] = useState(initialValues);\r\n  const handleSubmit = event => {\r\n    // prevents browser refresh after form submission\r\n    if (event) event.preventDefault();\r\n    callback();\r\n  };\r\n  const handleInputChange = event => {\r\n    event.persist();\r\n    setInputs(inputs => ({\r\n      ...inputs,\r\n      [event.target.name]: event.target.value\r\n    }));\r\n  };\r\n  return {\r\n    handleSubmit,\r\n    handleInputChange,\r\n    inputs\r\n  };\r\n};\r\nexport default useBookingForm;\r\n","import React from 'react';\r\nimport useBookingForm from './CustomHooks';\r\nimport axios from 'axios';\r\n\r\nconst Booking = () => {\r\n  // callback function called after form below is submitted\r\n  // sends input data to server via axios\r\n  const booking = () => {\r\n    alert(`Booking enquiry sent. Thanks ${inputs.name}`);\r\n    axios\r\n      .post(`https://desert-point-server.herokuapp.com/post`, { inputs })\r\n      .then(res => {});\r\n  };\r\n\r\n  // a useBookingForm hook will handle the input changes and input submission\r\n  const { inputs, handleInputChange, handleSubmit } = useBookingForm(\r\n    { name: '', email: '', telephone: '', dates: '', package: '', message: '' },\r\n    booking\r\n  );\r\n\r\n  return (\r\n    <section id='booking'>\r\n      <h1>Booking enquiry</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <fieldset>\r\n          <div>\r\n            <label>Name</label>\r\n            <input\r\n              type='text'\r\n              name='name'\r\n              onChange={handleInputChange}\r\n              value={inputs.name}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label>Email</label>\r\n            <input\r\n              type='text'\r\n              name='email'\r\n              onChange={handleInputChange}\r\n              value={inputs.email}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor='telephone'>Telephone</label>\r\n            <input\r\n              type='text'\r\n              name='telephone'\r\n              onChange={handleInputChange}\r\n              value={inputs.telephone}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Dates</label>\r\n            <input\r\n              type='text'\r\n              name='dates'\r\n              onChange={handleInputChange}\r\n              value={inputs.dates}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Package</label>\r\n            <input\r\n              type='text'\r\n              name='package'\r\n              onChange={handleInputChange}\r\n              value={inputs.package}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Message</label>\r\n            <textarea\r\n              name='message'\r\n              onChange={handleInputChange}\r\n              value={inputs.message}\r\n            ></textarea>\r\n          </div>\r\n\r\n          <div>\r\n            <button type='submit'>Submit</button>\r\n          </div>\r\n        </fieldset>\r\n      </form>\r\n      <a href='https://www.facebook.com/SurfHouseDesertPoint/' target='blank'>\r\n        <img className='social-icon' src='images/f_logo.png' alt='facebook' />\r\n      </a>\r\n      <a href='https://www.instagram.com/surfhousedesertpoint/' target='blank'>\r\n        <img\r\n          className='social-icon'\r\n          src='images/insta_logo.png'\r\n          alt='instagram'\r\n        />\r\n      </a>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Booking;\r\n","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport React from 'react';\r\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\r\nimport arrayMove from 'array-move';\r\n\r\nconst Admin = () => {\r\n  const url = 'https://desert-point-server.herokuapp.com/enquiries';\r\n  // setData will update data variable using useState\r\n  const [data, setData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // retrieve enquiries from backend, assign to data variable\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    axios.get(url).then(json => {\r\n      setData(json.data);\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  // function to mark enquiries as \"read\". All enquiries are initially set as read:\"false\".\r\n  // This function creates a copy of the data retrieved from the database. When the rowid matches\r\n  // the rowid of the data, read is marked as \"true\"\r\n  function readEnquiry(rowid) {\r\n    const updatedData = data.map(data =>\r\n      // read: \"true\" rather than true as sqlite does not accept booleans\r\n      // this can now be changed to boolean as postgressql accepts booleans\r\n      data.rowid === rowid ? { ...data, read: 'true' } : data\r\n    );\r\n    setData(updatedData);\r\n  }\r\n\r\n  // function to delete an enquiry. It returns all the enquiries except\r\n  // for the enquiry with the rowid selected by the user\r\n  function deleteEnquiry(rowid) {\r\n    const filteredData = data.filter(data => data.rowid !== rowid);\r\n    setData(filteredData);\r\n  }\r\n\r\n  // function to send any changes to the enquiries to the backend\r\n  function saveChanges() {\r\n    axios.post(`https://desert-point-server.herokuapp.com/update-enquiries`, {\r\n      data\r\n    });\r\n  }\r\n\r\n  // SortableEnquiry inherits the features of SortableElement from react-sortable-hoc,\r\n  // allowing it to be dragged and dropped. It displays each enquiry and has 2 buttons\r\n  // to mark as read and to delete the enquiry\r\n  const SortableEnquiry = SortableElement(\r\n    ({ value, readEnquiry, deleteEnquiry }) => (\r\n      // currently === \"true\" not true as sqlite does not accept boolean\r\n      // when an item is marked as \"read\", it will change color\r\n      <div className={`enquiry-card${value.read === 'true' ? ' read' : ''}`}>\r\n        <div className='enquiryButtonWrapper'>\r\n          <button className='enquiryButton' type='button' onClick={readEnquiry}>\r\n            <img src='images/tick.png' className='buttonIcon' alt='tick' />\r\n          </button>\r\n          <button\r\n            className='enquiryButton'\r\n            type='button'\r\n            onClick={deleteEnquiry}\r\n          >\r\n            <img src='images/bin.png' className='buttonIcon' alt='bin' />\r\n          </button>\r\n        </div>\r\n        <p className='enquiry-header'>Enquiry date: {value.enquirydate}</p>\r\n        <hr></hr>\r\n        <p>{value.name}</p>\r\n        <p>{value.email}</p>\r\n        <p>{value.telephone}</p>\r\n        <p>{value.dates}</p>\r\n        <p>{value.package}</p>\r\n        <hr></hr>\r\n        <p className='enquiry-footer'>Message:</p>\r\n        <p>{value.message}</p>\r\n      </div>\r\n    )\r\n  );\r\n\r\n  // SortableEnquiryContainer will hold the SortableEnquiries, allowing them to\r\n  // be dragged and dropped. It will map the enquiry data and pass it to each\r\n  // SortableEnqiury element\r\n  const SortableEnquiryContainer = SortableContainer(({ items }) => (\r\n    <div className='enquiry-card-container'>\r\n      {items.map((value, index) => (\r\n        <SortableEnquiry\r\n          key={value.rowid}\r\n          index={index}\r\n          value={value}\r\n          readEnquiry={() => readEnquiry(value.rowid)}\r\n          deleteEnquiry={() => deleteEnquiry(value.rowid)}\r\n        />\r\n      ))}\r\n    </div>\r\n  ));\r\n\r\n  // data elements will be updated with a new index once they've been moved\r\n  // this function will be passed to the SortableEnquiryContainer below\r\n  const onSortEnd = ({ oldIndex, newIndex }) =>\r\n    setData(arrayMove(data, oldIndex, newIndex));\r\n\r\n  return (\r\n    <div id='admin'>\r\n      <h1>Enquiries</h1>\r\n      <h4>\r\n        Drag enquiries to reorder them. Tick to mark as read. Bin to delete\r\n      </h4>\r\n      <button onClick={saveChanges} className='enquiry-save'>\r\n        {' '}\r\n        <img src='images/save.png' className='buttonIcon' alt='save' /> Save\r\n        changes\r\n      </button>\r\n      {isLoading ? (\r\n        <div className='typing_loader'></div>\r\n      ) : (\r\n        <SortableEnquiryContainer\r\n          axis='xy'\r\n          onSortEnd={onSortEnd}\r\n          items={data}\r\n          onSortStart={(_, event) => event.preventDefault()}\r\n          pressDelay='150'\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","import React from 'react';\r\nimport NavBackground from './components/NavBackground';\r\nimport Header from './components/Header';\r\nimport About from './components/About';\r\nimport Packages from './components/Packages';\r\nimport Booking from './components/Booking';\r\nimport Admin from './components/Admin';\r\n\r\nimport './App.css';\r\n\r\nimport { HashRouter, Route } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter basename='/'>\r\n      <div className='App'>\r\n        <Route exact path='/'>\r\n          <NavBackground />\r\n          <Header />\r\n          <About />\r\n          <Packages />\r\n          <Booking />\r\n        </Route>\r\n        <Route path='/about' component={About} />\r\n        <Route path='/packages' component={Packages} />\r\n        <Route path='/booking' component={Booking} />\r\n        <Route path='/admin' component={Admin} />\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}